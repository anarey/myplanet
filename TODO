Proyecto planet-django

- Configuramos maquinas virtuales a través de Vagrant y chef para trabajar.
- Crear repositorio. https://github.com/anarey/myplanet
- Creo el repositorio de trabajo en github
- Creo el proyecto: django-admin.py startproject myplanet
- Creo la aplicación: python manage.py startapp planet
- Termino de configurar el espacio de trabajo.
$ git init
$ git remote add origin git@github.com:anarey/myplanet.git
$ git pull git@github.com:anarey/myplanet.git
$ git push -u origin master

---
Comando para arrancar el proyecto. 
$ python manage.py runserver [::]:8000

----
Tareas:
[OK] ## Plantear un planet muy básico y sencillo en Django.

[OK] ## Crear una aplicacion denominada planet.  

[OK] ## Crear modelo de datos nominado Blog con cuatro campos: 
autor, 
nombre (del blog), 
feed que será una URL que apunte al feed RSS con el contenido del blog 
campo booleano que indique si este blog está activo o no.

[OK] ## Registrar la aplicación en la zona de administración de forma que se pueda crear, editar y modificar los objetos.

[OK] ## Crear vista pública en la url /planet que hará lo siguiente:

[OK] ## 1. Recorrer todos los objetos del modelo Blog que estén activos.
[OK] ## 2. Para cada blog se debe descargar el feed de posts. 
Dejo a tu elección la libreria a utilizar para esto (las hay dentro de la
librería estándar y también hay otras más específicas y/o fáciles de
utilizar fuera de la librería estándar)

[OK] ## 3. Una vez que se descargue el feed debe parsear el XML y quedarse
con el título del post, el enlace, la fecha de publicación y el cuerpo
del contenido. Almacenarlo en una estructura de datos.

[OK] ## Sacar de forma automática los datos. (La he liado inicialmente para recorrer los datos. Error, estaba intentando acceder a través del bucle a d['entries'][i] en vez de d['entries'])
[OK] ## Ponerlo medianemente bonito.

[OK] ## Una vez almacenados todos los posts de todos los blogs en tu
estructura de datos, debe ordenarlos por fecha de publicación.
 - OK - Obtener la fecha en timestamp
 - OK - Ordenar por fecha

[OK] ## Crear una plantilla en donde se mostrarán todos estos posts con enlaces a su blog original.

[OK] ## Implementar paginación. 
[OK] ## Poner un poco más bonita. ¿con numeración?

[TODO] Puedes restringirlo solo a un cierto tipo de feed RSS, Atom, etc.. y version.

## [OK] Solucionar rutas absolutas de los ficheros de configuración. 

## [OK] En la vista, blog_list podria haberse filtrado con los activos
directamente, añadiendo una llamada al método filter() del queryset.
https://docs.djangoproject.com/en/dev/topics/db/queries/

[OK] ### Paginación con numeros.  // podría hacerse más elegante.
### TODO Probar con opciones de los bucles for de las plantillas para hacer la iteración.
- está hecha, mandado el numero total de paginas convertida en una lista. Por que no sé como hacer un (for i=1 to 10) en los templates.

[OK] ### Hacer un formulario para dar de alta rss y después ser aceptados a través de la zona de administración. (mandar un mail diario indicando si hay tareas de administración.)

[OK] Comprobaciones de estilo:
* Python: http://www.python.org/dev/peps/pep-0008/
* Django: https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/

TODO ### Numero total de post que muestra un RSS.  ¿Forma de obtener todos?

TODO ### Incluir el formulario de búsqueda en todas las páginas a través de base.html

[OK] Probar como mostrar un formulario a partir de un modelo de datos:
https://docs.djangoproject.com/en/dev/topics/forms/modelforms/
http://www.maestrosdelweb.com/editorial/curso-django-los-formularios/
Hecho, pero eliminado del proyecto. 

TODO ## Arreglar css/ Colummnas mismo tamaño.

http://www.librosweb.es/css_avanzado/capitulo1/elementos_de_la_misma_altura.html
http://packages.python.org/feedparser/microformats.html#advanced-microformats

TODO ### Restringirlo solo a un cierto tipo de feed RSS, Atom, etc.. y version. ¿?


TODO ### Leer entradas de googleplus. librería en python que lee de googleplus.
TODO ### convertir de googlepus a RSS.
TODO ### rss de github

